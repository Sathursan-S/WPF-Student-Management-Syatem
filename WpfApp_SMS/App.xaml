<Application x:Class="WpfApp_SMS.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfApp_SMS"
             StartupUri="MainWindow.xaml"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             xmlns:materialDesign= "http://materialdesigninxaml.net/winfx/xaml/themes">
    <Application.Resources>
        <ResourceDictionary>

            <!--<ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Inherit" PrimaryColor="Blue"   SecondaryColor="Purple"  />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />

            </ResourceDictionary.MergedDictionaries>-->

            <!--closs button-->
                <Style x:Key="CloseButton" TargetType="Button">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <Rectangle x:Name="ButtonBackground"
                                       Fill="{TemplateBinding Background}"
                                       RadiusX="5"
                                       RadiusY="5"/>
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              TextBlock.FontWeight="Bold"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="ButtonBackground" Property="Fill" Value="#FFD80073"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="ButtonBackground" Property="Fill" Value="#FFA7006C"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="#AAAAAA"/>
                                        <Setter TargetName="ButtonBackground" Property="Fill" Value="#EFEFEF"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            <!-- Background Colors -->
            <SolidColorBrush x:Key="PrimaryBackgroundColor1" Color="#0d1b2a" />
            <!-- Rich Black -->
            <SolidColorBrush x:Key="SecondaryBackgroundColor" Color="#1b263b" />
            <!-- Oxford Blue -->
            <SolidColorBrush x:Key="TertiaryBackgroundColor" Color="#415a77" />
            <!-- YInMn Blue -->

            <!-- Accent Colors -->
            <SolidColorBrush x:Key="PrimaryAccentColor" Color="#778da9" />
            <!-- Silver Lake Blue -->
            <SolidColorBrush x:Key="SecondaryAccentColor" Color="#e0e1dd" />
            <!-- Platinum -->
            <!-- Background Colors -->
            <SolidColorBrush x:Key="CelestialBlueColor" Color="#219be4" />
            <SolidColorBrush x:Key="RaisinBlackColor" Color="#212226" />
            <SolidColorBrush x:Key="SlateBlueColor" Color="#635ad9" />
            <SolidColorBrush x:Key="ElectricBlueColor" Color="#88f4ff" />
            <SolidColorBrush x:Key="GrapeColor" Color="#7338ac" />

            <SolidColorBrush x:Key="OceanBlue" Color="#0078D4" />
            <SolidColorBrush x:Key="OceanLightBlue" Color="#50E6FF" />
            <SolidColorBrush x:Key="OceanYellow" Color="#FFB900" />
            <SolidColorBrush x:Key="OceanGray" Color="#F2F2F2" />
            <SolidColorBrush x:Key="OceanDarkBlue" Color="#333333" />

            <SolidColorBrush x:Key="PrimaryBackgroundColor" Color="#212226"/>
                <SolidColorBrush x:Key="ActionIconColor" Color="#fefff1"/>
                <SolidColorBrush x:Key="SecundaryBackgroundColor" Color="#2a3950"/>
            <SolidColorBrush x:Key="sBgCol" Color="#ec407a" />
            <!--icons-->
                <PathGeometry x:Key="minimize" Figures="M19 13H5a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2z"/>
                <PathGeometry x:Key="close" Figures="M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"/>
                <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="Width" Value="25"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Path Name="ico" Data="{TemplateBinding Content}" Fill="{DynamicResource ActionIconColor}" Height="10" Width="10" Stretch="Uniform"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="Tag" Value="IsCloseButton"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#F72626"/>
                                        <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBackgroundColor}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryBackgroundColor}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>


                <Style x:Key="ModernButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="#007ACC"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Padding" Value="10"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FontFamily" Value="Segoe UI"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <Rectangle x:Name="ButtonBackground"
                                       Fill="{TemplateBinding Background}"
                                       RadiusX="5"
                                       RadiusY="5"/>
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              TextBlock.FontWeight="Bold"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="ButtonBackground" Property="Fill" Value="#005E99"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="ButtonBackground" Property="Fill" Value="#004266"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="#AAAAAA"/>
                                        <Setter TargetName="ButtonBackground" Property="Fill" Value="#EFEFEF"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ButtonOne" TargetType="Button">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource sBgCol}" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Height" Value="52" />
                    <Setter Property="Margin" Value="15 3" />
                    <Setter Property="FontSize" Value="15" />
                    <Setter Property="FontWeight" Value="Medium" />
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="Template" >
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" CornerRadius="24" BorderThickness="2" BorderBrush="#ec407a" Padding="10">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#ec407a" />
                            <Setter Property="Foreground" Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter  Property="Background" Value="#004266"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#AAAAAA"/>
                            <Setter  Property="Background" Value="#EFEFEF"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="DatagridBTN_edit" TargetType="Button">
                    <Setter Property="Background" Value="Transparent"/>
                    <!--<Setter Property="Foreground" Value="Black" />-->
                    <Setter Property="Height" Value="auto" />
                    <Setter Property="Margin" Value="15 3" />
                    <Setter Property="FontSize" Value="13" />
                    <Setter Property="Template" >
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" CornerRadius="19" BorderThickness="1.2" BorderBrush="#2e0249" Padding="7">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2e0249" />
                            <Setter Property="Foreground" Value="#ffffff" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="DatagridBTN_delete" TargetType="Button">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Height" Value="35" />
                    <Setter Property="Width" Value="35" />
                    <Setter Property="Margin" Value="15 3" />
                    <Setter Property="FontSize" Value="13" />
                    <Setter Property="Template" >
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" CornerRadius="17" BorderThickness="1.5" BorderBrush="#F72626" Padding="7">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F72626" />
                            <Setter Property="Foreground" Value="#ffffff" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="gridButtonIcon" TargetType="Icon:PackIconMaterial">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Foreground}" />
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="18" />
                </Style>


                <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>


                

                <Style x:Key="searchTextbox" TargetType="TextBox">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{StaticResource sBgCol}" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Width" Value="150" />
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="Padding" Value="10" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="10" />
                    <Setter Property="Effect" >
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="2" Opacity="0.1" ShadowDepth="1"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                <Grid >
                                    <Border x:Name="border" CornerRadius="23" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" BorderThickness="2" BorderBrush="{StaticResource sBgCol}" >
                                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                    </Border>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 15 0" VerticalAlignment="Center">
                                        <Icon:PackIconMaterial Kind="Magnify" Width="22" Height="22" Margin="0 0 0 0"/>
                                    </StackPanel>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Foreground" Value="#eeeeee" />
                                        <Setter Property="Background" Value="{StaticResource sBgCol}" />
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource sBgCol}"/>
                                        <Setter Property="Width" Value="250" />
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                        <Setter Property="Foreground" Value="#eeeeee" />
                                        <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}" />
                                        <Setter Property="Background" Value="{StaticResource sBgCol}" />
                                        <Setter Property="Width" Value="250" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!--DataGrid Style-->

                <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
                    <Setter Property="Height" Value="8"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Cursor" Value="SizeNS"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
                <!--<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle2" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsClickable="{TemplateBinding CanUserSort}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" SeparatorBrush="{TemplateBinding SeparatorBrush}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </theme:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridCellStyle2" TargetType="{x:Type DataGridCell}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="Padding" Value="4,0,6,0"/>
            <Setter Property="Foreground" Value="BlueViolet"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="DataGridRowHeaderStyle2" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                        <Grid>
                            <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" SeparatorBrush="{TemplateBinding SeparatorBrush}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    <Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
                                </StackPanel>
                            </theme:DataGridHeaderBorder>
                            <Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top"/>
                            <Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridRowStyle2" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsNewItem" Value="True">
                    <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->

                <Style x:Key="MyDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="FontFamily" Value="Corbel"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="Foreground" Value="#eeee"/>
                    <Setter Property="Padding" Value="4"/>
                    <Setter Property="Template" >
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridColumnHeader">
                                <Border Background="{TemplateBinding Background}" CornerRadius="5"  >
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3 2"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>


                <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#222528"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                    <Setter Property="AutoGenerateColumns" Value="False" />
                    <Setter Property="HeadersVisibility" Value="Column" />
                    <Setter Property="Margin" Value="0 0 0 0" />
                    <Setter Property="Grid.Row" Value="5" />
                    <Setter Property="SelectionMode" Value="Single" />
                    <Setter Property="SelectionUnit" Value="FullRow" />
                    <Setter Property="CanUserAddRows" Value="False" />
                    <Setter Property="CanUserDeleteRows" Value="False" />
                    <Setter Property="CanUserReorderColumns" Value="False" />
                    <Setter Property="CanUserResizeRows" Value="False" />
                    <Setter Property="FontSize" Value="13" />
                    <Setter Property="GridLinesVisibility" Value="None" />
                    <Setter Property="ColumnWidth" Value="*" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGrid}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                    <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                        <ScrollViewer.Template>
                                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.Row="1"/>
                                                    <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                                    <Grid Grid.Column="1" Grid.Row="2">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                        </ScrollViewer.Template>
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
                    <Setter Property="Margin" Value="0 4 0 0" />
                <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="#2e0249"/>
                    <Setter Property="FontWeight" Value="Medium"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                    <Setter Property="ValidationErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock Foreground="White" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridRow}">
                                <Border x:Name="DGR_Border" Padding="0 5" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                    <SelectiveScrollingGrid>
                                        <SelectiveScrollingGrid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </SelectiveScrollingGrid.ColumnDefinitions>
                                        <SelectiveScrollingGrid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </SelectiveScrollingGrid.RowDefinitions>
                                        <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                        <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </SelectiveScrollingGrid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#6f88fc"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#c56d86"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#dfdfdf"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>

                <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Margin" Value="3 0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                    <Setter Property="Width" Value="8"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Cursor" Value="SizeWE"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="#69717D" />
                    <Setter Property="Margin" Value="0 0 0 0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </theme:DataGridHeaderBorder>
                                    <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!--End DataGrid Style-->

                <!--popup style-->
                <Style x:Key="PopupStyle" TargetType="Popup">
                    <!--<Setter Property="Popup.IsOpen" Value="{Binding IsPopupOpen}" />-->
                    <Setter Property="Popup.StaysOpen" Value="False" />
                </Style>

                <Style x:Key="PopupListViewItemStyle" TargetType="ListViewItem">
                    <Setter Property="Background" Value="Wheat" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Margin" Value="1" />
                    <Setter Property="Width" Value="285" />
                </Style>

                <Style x:Key="PopupImageStyle" TargetType="Image">
                    <Setter Property="Height" Value="80" />
                    <Setter Property="Width" Value="80" />
                    <Setter Property="Margin" Value="2" />
                </Style>

                <Style x:Key="PopupTextBlockStyle" TargetType="TextBlock">
                    <Setter Property="FontSize" Value="14" />
                </Style>

                <Style x:Key="PopupButtonStyle" TargetType="Button">
                    <Setter Property="Margin" Value="0,7,15,0" />
                </Style>

                <!--end-->

                <Style x:Key="closeIcon" TargetType="Icon:PackIconMaterial">
                    <Setter Property="Height" Value="15"/>
                    <Setter Property="Width" Value="15"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="Margin" Value="0 1 15 0"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>



                <Style x:Key="OceanButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="{StaticResource OceanBlue}" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Padding" Value="10" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="FontFamily" Value="Segoe UI" />
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="MinWidth" Value="100" />
                    <Setter Property="MinHeight" Value="30" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                                    <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource OceanLightBlue}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="{StaticResource OceanYellow}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="{StaticResource OceanGray}" />
                                        <Setter Property="Foreground" Value="{StaticResource OceanDarkBlue}" />
                                        <Setter Property="Cursor" Value="Arrow" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                    
                    
                <!--Add win styles-->
            <SolidColorBrush x:Key="FGcolor" Color="#1b263b" />
            <SolidColorBrush x:Key="BDRcolor" Color="#1b263b" />

            <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
                    <Setter Property="WindowStyle" Value="None" />
                    <Setter Property="AllowsTransparency" Value="True" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="ResizeMode" Value="NoResize" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Window}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                    <AdornerDecorator>
                                        <ContentPresenter/>
                                    </AdornerDecorator>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="customButton" TargetType="Button">
                    <Setter Property="Background" Value="{StaticResource sBgCol}" />
                    <Setter Property="Foreground" Value="#eeeeee" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="{StaticResource sBgCol}" />
                    <Setter Property="Padding" Value="10" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Width" Value="150" />
                    <Setter Property="Height" Value="40" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="2" Opacity="0.1" ShadowDepth="1" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" >
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Foreground" Value="{StaticResource sBgCol}" />
                                        <Setter Property="Background" Value="#eeeeee" />
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource sBgCol}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Foreground" Value="{StaticResource sBgCol}" />
                                        <Setter Property="Background" Value="{StaticResource sBgCol}" />
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource sBgCol}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            <Style x:Key="imgUpBtn" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Height" Value="300" />
                <Setter Property="Width" Value="300" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="150" BorderThickness="2" BorderBrush="{StaticResource FGcolor}" Padding="1">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="imgUp" TargetType="Image">
                
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Height" Value="200" />
                <Setter Property="Width" Value="200" />
                
            </Style>

            <Style x:Key="myTxtBox" TargetType="TextBox">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="materialDesign:HintAssist.FloatingHintHorizontalAlignment" Value="Left" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="materialDesign:HintAssist.Foreground" Value="Green" />
                
            </Style>

            <Style x:Key="MyButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource CelestialBlueColor}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="{StaticResource CelestialBlueColor}" />
                <Setter Property="Padding" Value="10" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="Width" Value="150" />
                <Setter Property="Height" Value="40" />
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource RaisinBlackColor}" />
                                    <Setter Property="Background" Value="{StaticResource ElectricBlueColor}" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ElectricBlueColor}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource RaisinBlackColor}" />
                                    <Setter Property="Background" Value="{StaticResource GrapeColor}" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource GrapeColor}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{StaticResource SlateBlueColor}" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SlateBlueColor}" />
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--end-->



           
        </ResourceDictionary>
    </Application.Resources>
</Application>
